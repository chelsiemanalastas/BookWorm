// <auto-generated />
using Book.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Book.DataAccess.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240804053009_AddProductsTblAndSeedData")]
    partial class AddProductsTblAndSeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Book.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DisplayOrder = 20,
                            Name = "Action"
                        },
                        new
                        {
                            Id = 2,
                            DisplayOrder = 15,
                            Name = "Thriller"
                        },
                        new
                        {
                            Id = 3,
                            DisplayOrder = 33,
                            Name = "Adventure"
                        },
                        new
                        {
                            Id = 4,
                            DisplayOrder = 45,
                            Name = "Comedy"
                        },
                        new
                        {
                            Id = 5,
                            DisplayOrder = 27,
                            Name = "Educational"
                        },
                        new
                        {
                            Id = 6,
                            DisplayOrder = 16,
                            Name = "Self-help"
                        });
                });

            modelBuilder.Entity("Book.Models.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ListPrice")
                        .HasColumnType("float");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<double>("Price100")
                        .HasColumnType("float");

                    b.Property<double>("Price50")
                        .HasColumnType("float");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Robert Greene",
                            Description = "Unwritten rules of life that will guide you through your journey as a human being.",
                            ISBN = "123-ABC-4567-89D",
                            ListPrice = 28.5,
                            Price = 25.0,
                            Price100 = 19.75,
                            Price50 = 23.0,
                            Title = "The Laws of Human Nature"
                        },
                        new
                        {
                            Id = 2,
                            Author = "Robert Greene",
                            Description = "48 Laws to become powerful.",
                            ISBN = "07-222-ABCD-8F",
                            ListPrice = 32.0,
                            Price = 30.0,
                            Price100 = 25.0,
                            Price50 = 28.0,
                            Title = "48 Laws of Power"
                        },
                        new
                        {
                            Id = 3,
                            Author = "Fyodor Dostoevsky",
                            Description = "An individual's morality is shaped by one's nature.",
                            ISBN = "022-77GKL-54321",
                            ListPrice = 22.0,
                            Price = 21.0,
                            Price100 = 17.0,
                            Price50 = 19.0,
                            Title = "Crime and Punishment"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
